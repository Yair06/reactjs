name: Deploy to EC2

on:
  push:
    branches:
      - main  # La pipeline se déclenchera uniquement sur la branche main

jobs:
  deploy:
    runs-on: ubuntu-latest  # Utilisation d'une machine virtuelle Ubuntu pour le déploiement

    steps:
      # Checkout du code source
      - name: Checkout code
        uses: actions/checkout@v2

      # Mettre à jour les paquets
      - name: Update packages
        run: sudo apt-get update -y && sudo apt-get upgrade -y

      # Installer openssh-client
      - name: Install openssh-client
        run: sudo apt-get install -y openssh-client

      # Ajouter la clé privée SSH encodée
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Clé privée SSH stockée dans les secrets GitHub

      # Ajouter l'IP de GitHub au fichier known_hosts pour éviter les avertissements de sécurité
      - name: Add GitHub to known_hosts
        run: ssh-keyscan github.com >> ~/.ssh/known_hosts

      # Déployer sur l'instance EC2 (connexion SSH et git pull)
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ${{ secrets.WORK_DIR }}
            git pull origin main
            npm install
            npm run build
            pm2 restart app || pm2 start npm --name "app" -- run start
          EOF
        env:
          SSH_USER: ${{ secrets.SSH_USER }}    # Utilisateur SSH (par exemple, ubuntu)
          SSH_HOST: ${{ secrets.SSH_HOST }}    # IP publique de ton instance EC2
          WORK_DIR: ${{ secrets.WORK_DIR }}    # Répertoire où ton projet est cloné
          MAIN_BRANCH: main                   # La branche principale du projet

      # Nettoyage du répertoire .ssh (sécurisation)
      - name: Clean up SSH
        run: rm -rf ~/.ssh
